/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.87
 * Generated at: 2024-07-09 01:48:47 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.admin;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class admin_005fcustomer_005frentlist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/sh3/workspace-sts-3.9.18/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/Shinhan_SW_1st_TeamProject/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1719295440415L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html lang=\"ko\">\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"UTF-8\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("    <title>고객 대여 목록</title>\r\n");
      out.write("    <link href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css\" rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "common.jsp", out, false);
      out.write("\r\n");
      out.write("    <div class=\"content\">\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("            <h1>고객 대여 목록</h1>\r\n");
      out.write("            \r\n");
      out.write("            <form id=\"searchForm\" class=\"form-inline mb-3\">\r\n");
      out.write("                <input type=\"text\" name=\"searchRentList\" id=\"searchRentList\" placeholder=\"고객 아이디 또는 이름 또는 이메일 입력\" class=\"form-control mr-2\">\r\n");
      out.write("                <input type=\"button\" class=\"btn btn-primary\" onclick=\"searchRents()\" value=\"검색\"/>\r\n");
      out.write("                <input type=\"button\" class=\"btn btn-secondary ml-2\" onclick=\"resetSearch()\" value=\"초기화\"/>                \r\n");
      out.write("            </form>\r\n");
      out.write("\r\n");
      out.write("            <div class=\"table-container\">\r\n");
      out.write("                <table class=\"table table-striped\">\r\n");
      out.write("                    <thead>\r\n");
      out.write("                        <tr>\r\n");
      out.write("                        	<th>아이디</th>\r\n");
      out.write("                        	<th>이름</th>\r\n");
      out.write("                        	<th>연락처</th>\r\n");
      out.write("                            <th>대여 코드</th>\r\n");
      out.write("                            <th>대여 시작 날짜</th>\r\n");
      out.write("                            <th>대여 종료 날짜</th>\r\n");
      out.write("                            <th>상품 이름</th>\r\n");
      out.write("                            <th>수량</th>\r\n");
      out.write("                            <th>가격</th>\r\n");
      out.write("                            <th>대여 상태</th>\r\n");
      out.write("                        </tr>\r\n");
      out.write("                    </thead>\r\n");
      out.write("                    <tbody id=\"rentList\">\r\n");
      out.write("                    	\r\n");
      out.write("                    </tbody>\r\n");
      out.write("                </table>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write(" \r\n");
      out.write("    <script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("    <script>\r\n");
      out.write("        function searchRents() {\r\n");
      out.write("            var searchRentList = $('#searchRentList').val();\r\n");
      out.write("            $.ajax({\r\n");
      out.write("                url: 'admin_customer_search_rentlist',\r\n");
      out.write("                type: 'GET',\r\n");
      out.write("                data: { searchKeyword: searchRentList },\r\n");
      out.write("                success: function(response) {\r\n");
      out.write("                	console.log(response);\r\n");
      out.write("                	var output = \"\";\r\n");
      out.write("                	$.each(response, function(index, item){\r\n");
      out.write("                		var rent = $(item)[0];                		\r\n");
      out.write("                		output += `\r\n");
      out.write("                    		<tr>\r\n");
      out.write("                    			<td>${rent.member_id}</td>\r\n");
      out.write("                    			<td>${rent.member_name}</td>\r\n");
      out.write("                    			<td>${rent.phone}</td>\r\n");
      out.write("                    			<td>${rent.rental_code}</td>\r\n");
      out.write("                    			<td>${rent.rent_start_date}</td>\r\n");
      out.write("                    			<td>${rent.rent_end_date}</td>\r\n");
      out.write("                    			<td>${rent.prod_name}</td>\r\n");
      out.write("                    			<td>${rent.rent_num}</td>\r\n");
      out.write("                    			<td>${rent.rent_product_price}</td>\r\n");
      out.write("                    			<td>${rent.rent_state}</td>\r\n");
      out.write("                    		</tr>\r\n");
      out.write("                    	`;\r\n");
      out.write("                	});\r\n");
      out.write("                	\r\n");
      out.write("                    $('#rentList').html(output);\r\n");
      out.write("                },\r\n");
      out.write("                error: function() {\r\n");
      out.write("                    alert('대여 검색에 실패했습니다.');\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        function resetSearch() {\r\n");
      out.write("            $('#searchRentList').val('');\r\n");
      out.write("            $('#rentList').html('');\r\n");
      out.write("        }        \r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}

<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
      PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.saren.rent_prod_stock">

	<!-- 선택 옵션 상품의 대여 재고id 찾기 -->
	<select id="selectRentStockByProdId" parameterType="string"
		resultType="map">
		select r_stock_id,
		rps.opt_id1,rps.opt_id2,rps.opt_id3,rps.opt_id4,rps.opt_id5 , stock
		from rent_prod_stock rps
		join prod p on(rps.prod_id = p.prod_id)
		where
		p.prod_id= #{prod_id}
		and opt_id1||','|| opt_id2||','||opt_id3
		||','||opt_id4||','||opt_id5 = #{optionString}

	</select>
	
	<!-- 상품의 대여 재고id 조회 -->
	<select id="selectRentStockByProdId2"  parameterType="string"
		resultType="rent_prod_stockVO">
		select r_stock_id
		from rent_prod_stock
		where  prod_id= #{prod_id}
	</select>
	
	<!-- 상품ID로 대여 상품 옵션별 재고 조회 -->
	<select id="selectRpsOptionByProdId" parameterType="string"
		resultType="rent_prod_stockVO">
		SELECT 
			r_stock_id,
		    prod_id,
		    opt_id1,
		    opt_id2,
		    opt_id3,
		    opt_id4,
		    opt_id5,
		    stock
		FROM 
		    RENT_PROD_STOCK 
		WHERE 
		    prod_id = #{prod_id}
	</select>

	<!-- 대여상품상세 -->
	<select id="selectById" parameterType="string"
		resultType="rent_prod_stockVO">
		SELECT *
		FROM RENT_PROD_STOCK
		WHERE r_stock_id = #{r_stock_id}
	</select>

	<select id="findMaxStockNumber" parameterType="string"
		resultType="integer">
		SELECT
		max(to_number(REGEXP_SUBSTR(r.r_stock_id,'_([0-9]+)$', 1, 1, null,
		1)))
		FROM RENT_PROD_STOCK r
		WHERE r.prod_id = #{prod_id}
	</select>

	<select id="findRentStockList" parameterType="string"
		resultType="rent_prod_stocklistVO">
		SELECT
		r.r_stock_id,
		r.stock,
		p.prod_added_date,
		p.prod_price
		FROM
		RENT_PROD_STOCK r
		JOIN
		PROD p ON r.prod_id = p.prod_id
		WHERE
		p.member_id = #{member_id}
	</select>

	<!-- 대여상품목록 -->
	<select id="selectAll"
		resultType="com.team4.shoppingmall.rent_prod_stock.RentProdStockDTO">
		SELECT *
		FROM RENT_PROD_STOCK
	</select>

	<!-- 대여상품등록 -->
	<insert id="rentProdInsert" parameterType="rent_prod_stockVO">
		INSERT
		INTO RENT_PROD_STOCK(r_stock_id, stock, total, 
		prod_id, opt_id1, opt_id2, opt_id3, opt_id4, opt_id5)
		VALUES(#{r_stock_id}, #{stock}, #{total}, #{prod_id}, #{opt_id1}, 
		#{opt_id2}, #{opt_id3}, #{opt_id4}, #{opt_id5})
	</insert>
		
	<!-- 대여 생성시 대여 수량 업데이트 -->
	<update id="rentProdStockUpdate">
		UPDATE RENT_PROD_STOCK
		SET
		stock = stock - #{rent_num}
		WHERE r_stock_id =  #{r_stock_id}
	</update>

	<!-- 대여상품수정 -->
	<update id="rentProdUpdate" parameterType="rent_prod_stockVO">
		UPDATE RENT_PROD_STOCK
		SET
		stock = #{stock}, total = #{total}, opt_id1 = #{opt_id1},
		opt_id2 = #{opt_id2}, opt_id3 = #{opt_id3}, opt_id4 = #{opt_id4},
		opt_id5 = #{opt_id5}
		WHERE r_stock_id = #{r_stock_id}
	</update>

	<!-- 대여상품재고수정 -->
	<update id="rentStockUpdate" parameterType="rent_prod_stockVO">
		UPDATE
		RENT_PROD_STOCK
		SET
		stock = #{stock}
		WHERE r_stock_id = #{r_stock_id}
	</update>

	<!-- 대여상품삭제 -->
	<delete id="rentProdDelete"
		parameterType="com.team4.shoppingmall.rent_prod_stock.RentProdStockDTO">
		DELETE
		FROM RENT_PROD_STOCK
		WHERE "stock_id" = #{stock_id}
	</delete>

</mapper>